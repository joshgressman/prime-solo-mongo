Create a collection named orders.
1. db.createCollection("orders")

Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.
2. bd.orders.insert({orderDate: newDate("August 29th, 2016"), orderTotal:"$100",
 lineItems:[{unitPrice:"$10.00"}, {quantity: "10"}, {productName: "Beebop"}]})


 db.orders.insert({orderDate: new Date("October 17th, 1987"), orderTotal:"$3500",
 lineItems:[{unitPrice:"$75.00"}, {quantity: "20"}, {productName: "Bop"}]})

 db.orders.insert({orderDate: new Date("October 17th, 2001"), orderTotal:"$1000",
 lineItems:[{unitPrice:"$100.00"}, {quantity: "10"}, {productName: "Bop"}]})

Find a single order document, any order document.
 3. db.orders.find({orderTotal: {$gt: "$100"}})

Find all orders and make them look pretty.
 4. db.orders.find().pretty()

Find all orders with an orderDate that is prior to 1/1/2016
 5. db.orders.find({orderDate: {$lt: new Date('2016-01-01')}})

Find all orders with an orderDate that is after 1/1/2016.
6. db.orders.find({orderDate: {$gt: new Date('2016-01-01')}})

Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.
7.

8.Update one of your line items to 42.99. HINT: Look at dot notation
db.orders.update({"lineItems.1":{$exists: true}}, {$rename: {"quantity":"number"}})

9.Remove one of your orders.
db.orders.remove({"unitPrice": "10.00"})
